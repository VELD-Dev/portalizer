# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Nightly Releases

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Nightly Builds
    
    strategy:
      matrix:
        kind: ["WINDOWS", "LINUX"]
        include:
        - kind: WINDOWS
          os: windows-latest
          target: win-x64
        - kind: LINUX
          os: ubuntu-latest
          target: linux-x64
          
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      shell: bash
      run: |
        # Define variables
        commit_hash=$(git rev-parse --short "$GITHUB_SHA")
        release_name="RiftRipper-nightly-${commit_hash}.${{ matrix.target }}"
        echo "$release_name"
        
        # Build
        dotnet publish RiftRipper/RiftRipper.csproj --runtime "${{ matrix.target }}" -f=net7.0 -c "${{ matrix.kind }}" -o "$release_name"
        
        # Pack files
        if [ "${{ matrix.target }}" == "win-x64" ]; then
          7z a -tzip "${release_name}.zip" "./${release_name}/*"
        else
          tar czvf "${release_name}.tar.gz" "$release_name"
        fi
        
        # Delete output dir
        rm -r "$release_name"
      
    - name: Test
      run: dotnet test --no-build --verbosity normal
      
    - name: Publish
      uses: ncipollo/release-action@v1.12.0
      with:
        name: ${{ github.ref }}
        tag: 'nightly'
        artifacts: RiftRipper-nightly-*.zip
        allowUpdates: true
        draft: false
        omitBodyDuringUpdate: true
        omitDraftDuringUpdate: true
        omitNameDuringUpdate: true
        prerelease: true
        replacesArtifacts: false
        skipIfReleaseExists: false
        
#  build-ubuntu:
#    name: Ubuntu Unstable Build
#    runs-on: ubuntu-latest
#    
#    steps:
#    - uses: actions/checkout@v3
#    - name: Setup .NET
#      uses: actions/setup-dotnet@v3
#      with:
#        dotnet-version: 7.0.x
#    - name: Restore dependencies
#      run: dotnet restore
#    - name: Build
#      run: dotnet build --no-restore
#    - name: Test
#      run: dotnet test --no-build --verbosity normal

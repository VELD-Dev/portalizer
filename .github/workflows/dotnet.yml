# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Nightly Releases

on:
  push:
    branches: [ "main" ]
    paths:
    - "**.cs"
  pull_request:
    branches: [ "main" ]
    paths:
    - "**.cs"

jobs:
  build:
    name: Nightly Builds
    
    strategy:
      matrix:
        kind: ["WINDOWS", "LINUX"]
        include:
        - kind: WINDOWS
          os: windows-latest
          target: win-x64
          fw: net7.0-windows
        - kind: LINUX
          os: ubuntu-latest
          target: linux-x64
          fw: net7.0
          
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        
    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      shell: bash
      run: |
        # Define variables
        commit_hash=$(git rev-parse --short "$GITHUB_SHA")
        build_date=$(date +'%Y-%m-%d')
        release_name="RiftRipper-nightly-${build_date}.${commit_hash}.${{ matrix.target }}"
        echo "$release_name"
        
        # Build
        dotnet build RiftRipper/RiftRipper.csproj -c "${{ matrix.kind }}" -r "${{ matrix.target }}" --no-self-contained
        wait
        
        # Pack files
        if [ "${{ matrix.target }}" == "win-x64" ]; then
          7z a -tzip "${release_name}.zip" "RiftRipper/bin/${{ matrix.kind }}/${{ matrix.fw }}/${{ matrix.target }}/*"
        else
          tar -czvf "${release_name}.tar.gz" "RiftRipper/bin/${{ matrix.kind }}/${{ matrix.fw }}/${{ matrix.target }}"
        fi
        wait
        
        # Delete output dir
        #rm -r "$release_name"
        #wait
      
    - name: Test
      run: dotnet test --no-build --verbosity normal
      
    - name: Publish
      uses: ncipollo/release-action@v1.12.0
      with:
        name: Nightly Builds
        tag: 'nightly'
        artifacts: ./RiftRipper-nightly-*
        allowUpdates: true
        draft: false
        omitBodyDuringUpdate: true
        omitDraftDuringUpdate: true
        omitNameDuringUpdate: true
        prerelease: true
        replacesArtifacts: false
        skipIfReleaseExists: false
